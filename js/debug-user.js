/**
 * Script de diagn√≥stico para problemas com ID de usu√°rio
 * Coloque este script antes do fechamento do </body> para debug
 */

(function() {
    // Carregar depend√™ncias
    import('./auth.js').then(auth => {
        // Verificar usu√°rio atual
        const user = auth.getCurrentUser();
        console.log('üîç DEBUG - Usu√°rio atual:', user);
        
        if (!user) {
            console.warn('‚ö†Ô∏è Nenhum usu√°rio logado. O salvamento de dados requer login.');
            return;
        }
        
        // Verificar ID
        if (!user.id) {
            console.error('‚ùå Usu√°rio sem ID. Isso causar√° erros ao salvar dados.');
            
            // Tentar corrigir automaticamente
            mostrarNotificacaoDebug('ID de usu√°rio ausente ou inv√°lido. Tente fazer logout e login novamente.');
            return;
        }
        
        // Verificar se √© ID tempor√°rio
        if (user.id.startsWith('temp-')) {
            console.error('‚ùå ID tempor√°rio detectado:', user.id);
            console.error('Isso causar√° viola√ß√£o de chave estrangeira ao salvar puxadores.');
            
            // Tentar corrigir automaticamente
            mostrarNotificacaoDebug('Seu ID de usu√°rio √© tempor√°rio. Tente fazer logout e login novamente.');
            return;
        }
        
        // Verificar formato UUID
        const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
        if (!uuidRegex.test(user.id)) {
            console.error('‚ùå ID n√£o parece ser um UUID v√°lido:', user.id);
            console.error('Isso pode causar viola√ß√£o de chave estrangeira.');
            
            // Tentar corrigir automaticamente
            mostrarNotificacaoDebug('Seu ID de usu√°rio n√£o est√° no formato esperado. Tente fazer logout e login novamente.');
            return;
        }
        
        console.log('‚úÖ ID de usu√°rio parece v√°lido:', user.id);
        
        // Mostrar status como sucesso
        mostrarStatus('ID de usu√°rio verificado', 'success');
    }).catch(error => {
        console.error('‚ùå Erro ao carregar m√≥dulo de autentica√ß√£o:', error);
        mostrarNotificacaoDebug('Erro ao verificar usu√°rio. Tente recarregar a p√°gina.');
    });
    
    // Fun√ß√£o para mostrar status
    function mostrarStatus(mensagem, tipo = 'info') {
        console.log(`[${tipo.toUpperCase()}] ${mensagem}`);
    }
    
    // Fun√ß√£o para mostrar notifica√ß√£o de debug
    function mostrarNotificacaoDebug(mensagem) {
        // Tentar usar o sistema de notifica√ß√£o existente
        if (window.mostrarNotificacao) {
            window.mostrarNotificacao(mensagem, 'warning');
            return;
        }
        
        // Fallback para alert se n√£o houver sistema de notifica√ß√£o
        console.warn('Sistema de notifica√ß√£o n√£o encontrado, usando alert');
        setTimeout(() => {
            alert('DIAGN√ìSTICO: ' + mensagem);
        }, 1000);
    }
})(); 